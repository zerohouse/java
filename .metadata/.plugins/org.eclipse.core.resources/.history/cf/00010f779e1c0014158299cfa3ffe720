import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;

public class Server extends Thread {
	
	static final String SEPERATOR = "@%@";
	static final String SEP = "#";
	static final String SEPS = "::";
	
	GetValue get = new GetValue();
	
	Socket socket;
	DataInputStream in;
	DataOutputStream out;
	
	Game game;

	Server(Socket socket) {
		this.socket = socket;
		try {
			in = new DataInputStream(socket.getInputStream());
			out = new DataOutputStream(socket.getOutputStream());
		} catch (IOException e) {
		}
	}

	@Override
	public void run() {
	
		game = new Game();
		try {
			game.multiGame();

		} catch (IOException e) {
			e.printStackTrace();
		}

		while (in != null) {
			try {
				accept(in.readUTF());
			} catch (IOException e) {
			}
		}
	}

	private void accept(String readUTF) {
		String[] type = readUTF.split("@##"); // type 0 => 초기화
		if (Integer.parseInt(type[0]) == 0) {
			initGame(type[1]);
			myTurn();
		}
		else if (Integer.parseInt(type[0])==5){ // 5는 상대방의 카드 사용
			useCard(Integer.parseInt(type[1]));
		}
		else if (Integer.parseInt(type[0])==6){ // 6는 상대방의 턴 종료
			myTurn();
		}
	}

	private void myTurn() {
		game.me.newTurn();
		int num = -2;
		while (num != -1) {
			game.me.printAll();
			refreshClient();
			System.out.print("카드 번호를 입력해주세요: ");
			num = get.Int() - 1;
			if (num == -1) {
				break;
			}
			game.me.useCard(num);
		}
		yourTurn();
	}
	
	private void yourTurn() {
		game.you.newTurn();
		try {
			out.writeUTF("2@##");
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	private void refreshClient() {
		try {
			out.writeUTF("1@##"+game.you.toStringAll());
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	

	private void initGame(String initstring) {
		String[] setting = initstring.split("::");
		game.you = new Player();

		game.you.name = setting[0];
		Dek d = new Dek();
		d.selectDek(setting[1]);
		d.infoToCardWithoutPrint(game.you);
		game.you.cardToHand(setting[2]);
		game.you.dekToDummy(setting[3]);
		game.you.makeKing();
		game.you.enemy = game.me;
		game.me.enemy = game.you;
	}
	
}