public class Dek {

	final String Seperator = "@%@";
	
	Card[] loadDefaultCards() {
		FileIO f = new FileIO();
		String c = f.readFile("cards.nx");
		String[] eachcard = c.split("\n");
		Card[] cards = new Card[eachcard.length];

		String[] tmp = new String[7];

		for (int i = 0; i < eachcard.length - 1; i++) {
			Card tmpcard = new Card();
			cards[i] = tmpcard;

			tmp = eachcard[i].split(Seperator);

			cards[i].id = i + 1;
			cards[i].name = tmp[1];
			cards[i].cost = Integer.parseInt(tmp[2]);
			cards[i].attack = Integer.parseInt(tmp[3]);
			cards[i].defense = Integer.parseInt(tmp[4]);
			cards[i].type = Integer.parseInt(tmp[5]);
			cards[i].description = tmp[6];
		}
		return cards;
	}

	String[] getDekList() {
		FileIO f = new FileIO();
		String cards = f.readFile("dek.nx");
		String[] dek = cards.split("\n");
		return dek;
	}

	void showDekList(String[] dek) {
		int i = 0;
		for (String s : dek) {
			String[] tmp = s.split(Seperator);
			i++;
			System.out.println(String.format("%d. %s", i, tmp[1]));
		}
	}

	String select(int select) {
		String dek[] = getDekList();
		String[] splt = dek[select].split(Seperator);
		return splt[1];
	}

	String SelectDek(int selected, Card[] defaultcards) {
		String filename = select(selected);
		FileIO f = new FileIO();
		String select = f.readFile(String.format("./dek/%s.nx", filename));

		return select;
	}

	void showDek(String res, Card[] defaultcards) {
		String[] sdek = res.split(Seperator);

		System.out.println(" <" + sdek[0] + "의 카드목록>");

		for (int i = 2; i < sdek.length - 1; i++) {
			String[] tmp = sdek[i].split("#");
			System.out.print("(" + (i - 1) + ") ");
			System.out.println(String.format("%s[%d](%d/%d) %s장",
					defaultcards[Integer.parseInt(tmp[0])].name,
					defaultcards[Integer.parseInt(tmp[0])].cost,
					defaultcards[Integer.parseInt(tmp[0])].attack,
					defaultcards[Integer.parseInt(tmp[0])].defense, tmp[1]));
		}
		System.out.println();
	}

	void showCards(Card[] cards) {
		for (int i = 0; i < cards.length - 1; i++) {
			System.out.println(String.format("%d. %s[%d](%d/%d)", cards[i].id,
					cards[i].name, cards[i].cost, cards[i].attack,
					cards[i].defense));
		}

	}

	String addCard(int add, String s) {

		String origin[] = s.split(Seperator);
		String[] tmp;
		String res = "";
		boolean is = false;

		for (int i = 2; i < origin.length - 1; i++) {

			tmp = origin[i].split("#");

			if (Integer.parseInt(tmp[0]) == add - 1) {
				int added = Integer.parseInt(tmp[1]) + 1;
				res += Seperator + tmp[0] + "#" + added;
				is = true;
			} else {
				res += Seperator + origin[i];
			}
		}

		if (is == false) {
			res = Seperator + (add - 1) + "#1" + res;
		}

		res = origin[0] + Seperator + origin[1] + res + Seperator;

		return res;

	}

	String delCard(int del, String s) {

		String origin[] = s.split(Seperator);
		String[] tmp;
		String res = "";

		for (int i = 2; i < origin.length; i++) {

			tmp = origin[i].split("#");

			if (i == del + 1) {
				int added = Integer.parseInt(tmp[1]) - 1;
				if (added != 0) {
					res += Seperator + tmp[0] + "#" + added;
				}
			} else {
				res += Seperator + origin[i];
			}
		}

		res = origin[0] + Seperator + origin[1] + res + Seperator;

		return res;

	}

}
