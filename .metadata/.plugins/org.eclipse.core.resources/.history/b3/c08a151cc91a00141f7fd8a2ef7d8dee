// TcpServerTest.java
 
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.ServerSocket;
import java.net.Socket;
import java.text.SimpleDateFormat;
import java.util.Date;
 
public class Server {
    public static void main(String[] args) throws IOException {
                 
            // 서버소켓을 생성하고 5000번 포트와 결합(bind) 시킨다.
            @SuppressWarnings("resource")
			ServerSocket serverSocket = new ServerSocket(12423);
            System.out.println(InetAddress.getLocalHost().getHostAddress());
            System.out.println(getTime() + " 서버가 준비되었습니다.");
           int port = 12428;
         
            //OpenNewPort open = new OpenNewPort(); 
            
        while (true) {
            
                System.out.println(getTime() + " 연결요청을 기다립니다.");
                // 서버소켓은 클라이언트의 연결요청이 올 때까지 실행을 멈추고 계속 기다린다.
                // 클라이언트의 연결요청이 오면 클라이언트 소켓과 통신할 새로운 소켓을 생성한다.
                Socket socket = serverSocket.accept();
                System.out.println(getTime() + socket.getInetAddress() + " 로부터 연결요청이 들어왔습니다.");
                 
                // 소켓의 출력스트림을 얻는다.
                OutputStream out = socket.getOutputStream(); 
                DataOutputStream data = new DataOutputStream(out); // 기본형 단위로 처리하는 보조스트림
                
                InputStream in = socket.getInputStream();
        		DataInputStream datain = new DataInputStream(in);
                
                // 원격 소켓(remote socket)에 데이터를 보낸다.
                data.writeInt(port);
                System.out.println(datain.readInt());
                System.out.println(getTime() + port + " 포트번호를 전송했습니다.");
                
                //open.openNew(port);
                // 스트림과 소켓을 달아준다.
                //port++;
               // data.close();
                //socket.close();
        } // while
    } // main
     
    static String getTime() {
        SimpleDateFormat f = new SimpleDateFormat("[hh:mm:ss]");
        return f.format(new Date());
    } // getTime
}